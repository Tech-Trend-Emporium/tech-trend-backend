using Application.Abstractions;
using Data.Entities;
using NSubstitute;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnitTests.CartServices
{
    // Code generated by AI
    public static class TestHelper
    {
        public static void SetupTransactionPassthrough(IUnitOfWork uow)
        {
            uow.ExecuteInTransactionAsync(Arg.Any<Func<CancellationToken, Task>>(), Arg.Any<CancellationToken>())
               .Returns(ci =>
               {
                   var fn = ci.ArgAt<Func<CancellationToken, Task>>(0);
                   var ct = ci.ArgAt<CancellationToken>(1);
                   return fn(ct); 
               });
        }

        public static Inventory Inv(int productId, int available, int total = 999) =>
            new Inventory { ProductId = productId, Available = available, Total = total };

        public static Product Prod(int id, string name = "P") =>
            new Product { Id = id, Title = name };

        public static Coupon Coup(string code, bool active = true, DateTime? from = null, DateTime? to = null) =>
            new Coupon
            {
                Id = new Random().Next(1, 10000),
                Code = code,
                Active = active,
                ValidFrom = from ?? DateTime.UtcNow.AddDays(-1),
                ValidTo = to
            };

        public static Cart EmptyCart(int userId, int cartId = 1) =>
            new Cart { Id = cartId, UserId = userId, Items = new List<CartItem>() };

        public static Cart CartWithItem(int userId, int productId, int qty, int cartId = 1) =>
            new Cart
            {
                Id = cartId,
                UserId = userId,
                Items = new List<CartItem> { new CartItem { CartId = cartId, ProductId = productId, Quantity = qty } }
            };
    }
}
