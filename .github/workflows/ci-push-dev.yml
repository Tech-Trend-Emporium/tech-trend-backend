name: ci-push-dev

on:
  push:
    branches: [development]
  workflow_dispatch:

concurrency:
  group: ci-dev-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_VERSION: '8.0.x'
  REGISTRY_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}   # e.g. myregistry.azurecr.io
  REGISTRY_NAME:  ${{ secrets.ACR_NAME }}            # e.g. myregistry (no .azurecr.io)
  REPO: tech-trend-emporium/api                       # keep this EXACT everywhere
  SHA_TAG: ${{ github.sha }}
  DEV_TAG: dev-latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore/Build/Test
        run: |
          dotnet restore
          dotnet build --no-restore -c Release
          dotnet test --no-build --verbosity normal

      # ---------- Compute tags (this was missing) ----------
      - name: Set image tags
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          if [[ -z "${REGISTRY_SERVER}" || -z "${REPO}" ]]; then
            echo "REGISTRY_SERVER or REPO not set"; exit 1
          fi
          echo "image_uri=${REGISTRY_SERVER}/${REPO}:${SHA_TAG}"       >> "$GITHUB_OUTPUT"
          echo "image_uri_latest=${REGISTRY_SERVER}/${REPO}:${DEV_TAG}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_SHA=${REGISTRY_SERVER}/${REPO}:${SHA_TAG}"
          echo "IMAGE_DEV=${REGISTRY_SERVER}/${REPO}:${DEV_TAG}"

      # ---------- Login strategy: OIDC if vars exist ----------
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login to ACR via az (OIDC path)
        run: az acr login --name $REGISTRY_NAME

      # ---------- Sanity check what we are about to push ----------
      - name: Echo tags for debug
        run: |
          echo "Will push:"
          echo "  ${{ steps.meta.outputs.image_uri }}"
          echo "  ${{ steps.meta.outputs.image_uri_latest }}"

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.image_uri }}
            ${{ steps.meta.outputs.image_uri_latest }}

      - name: Summary
        run: |
          echo "Pushed: ${{ steps.meta.outputs.image_uri }}" >> $GITHUB_STEP_SUMMARY
          echo "Pushed: ${{ steps.meta.outputs.image_uri_latest }}" >> $GITHUB_STEP_SUMMARY