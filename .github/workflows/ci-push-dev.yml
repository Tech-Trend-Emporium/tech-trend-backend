name: ci push dev

on:
  push:
    branches: [ "development" ]
  workflow_dispatch:

env:
  # --- Set these repo secrets in GitHub ---
  # ACR_NAME:            e.g. tteacr
  # ACR_LOGIN_SERVER:    e.g. tteacr.azurecr.io
  ACR_NAME: ${{ secrets.ACR_NAME }}
  REGISTRY: ${{ secrets.ACR_LOGIN_SERVER }}
  IMAGE_NAME: trendtech-emporium/api
  DOTNET_VERSION: "8.0.x"

permissions:
  contents: read
  packages: read
  # Keep this so you can easily switch to OIDC later if you want.
  id-token: write

jobs:
  build-test-push:
    name: Build, Test, and Push Image
    runs-on: ubuntu-latest
    concurrency:
      group: ci-dev-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: |
          echo "Tests are being executed..."
          dotnet test --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"
          echo "Tests succesfully done"
          
#      - name: Publish test results
#        if: always()
#        uses: dorny/test-reporter@v1
#        with:
#          name: .NET Tests (development)
#          path: "**/test_results.trx"
#          reporter: dotnet-trx

      - name: Azure login (service principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR docker login (AAD)
        run: |
          ACCESS_TOKEN=$(az acr login --name ${{ secrets.ACR_NAME }} --expose-token --output tsv --query accessToken)
          echo $ACCESS_TOKEN | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u 00000000-0000-0000-0000-000000000000 --password-stdin

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACR_LOGIN_SERVER }}/trendtech-emporium/api
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=${{ github.run_number }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            build-args: |
                BUILD_CONFIGURATION=Release


      - name: Alert on image push
        run: |
            echo "Pushed tags: ${{ steps.meta.outputs.tags }}"

