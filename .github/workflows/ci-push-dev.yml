name: ci-push-dev

on:
  push:
    branches: [development]
  workflow_dispatch:

concurrency:
  group: ci-dev-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_VERSION: '8.0.x'
  REGISTRY_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}            
  REGISTRY_NAME: ${{ secrets.ACR_NAME }}                
  REPO: tech-trend-emporium/api                            # <—— pick ONE and keep it consistent
  SHA_TAG: ${{ github.sha }}
  DEV_TAG: dev-latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore/Build/Test
        run: |
          dotnet restore
          dotnet build --no-restore -c Release
          dotnet test --no-build --verbosity normal

      # OIDC to Azure -> then az acr login (no password stored)
      - name: Azure login (OIDC)
        if: ${{ vars.AZURE_USE_OIDC == 'true' }}
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Docker login to ACR via az
        if: ${{ vars.AZURE_USE_OIDC == 'true' }}
        run: az acr login --name $REGISTRY_NAME

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.image_uri }}
            ${{ steps.meta.outputs.image_uri_latest }}

      - name: Summary
        run: |
          echo "Pushed: ${{ steps.meta.outputs.image_uri }}" >> $GITHUB_STEP_SUMMARY
          echo "Pushed: ${{ steps.meta.outputs.image_uri_latest }}" >> $GITHUB_STEP_SUMMARY